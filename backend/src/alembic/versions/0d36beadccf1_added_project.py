"""Added Project

Revision ID: 0d36beadccf1
Revises: f949da35900d
Create Date: 2024-06-25 13:06:19.251268

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "0d36beadccf1"
down_revision: Union[str, None] = "f949da35900d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "project_labels",
        sa.Column("label_id", sa.UUID(), nullable=False),
        sa.Column("label", sa.String(length=100), nullable=True),
        sa.PrimaryKeyConstraint("label_id"),
    )
    op.create_table(
        "project_status",
        sa.Column("project_status_id", sa.Integer(), nullable=False),
        sa.Column("status", sa.String(length=100), nullable=True),
        sa.PrimaryKeyConstraint("project_status_id"),
    )
    op.create_table(
        "projects",
        sa.Column("project_id", sa.UUID(), nullable=False),
        sa.Column("owner_id", sa.UUID(), nullable=True),
        sa.Column("project_name", sa.String(length=100), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["owner_id"], ["users.user_id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("project_id"),
    )
    op.create_table(
        "project_members",
        sa.Column("project_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["project_id"], ["projects.project_id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.user_id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("project_id", "user_id"),
    )
    op.create_table(
        "project_tasks",
        sa.Column("project_task_id", sa.UUID(), nullable=False),
        sa.Column("project_id", sa.UUID(), nullable=True),
        sa.Column("task", sa.String(length=100), nullable=True),
        sa.Column("status_id", sa.Integer(), nullable=True),
        sa.Column("created_by", sa.UUID(), nullable=True),
        sa.Column("label_id", sa.UUID(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["created_by"], ["users.user_id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["label_id"], ["project_labels.label_id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["project_id"], ["projects.project_id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["status_id"], ["project_status.project_status_id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("project_task_id"),
    )

    op.alter_column(
        "users",
        "username",
        existing_type=sa.VARCHAR(length=25),
        type_=sa.String(length=250),
        existing_nullable=True,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "users",
        "username",
        existing_type=sa.String(length=250),
        type_=sa.VARCHAR(length=25),
        existing_nullable=True,
    )
    op.drop_table("project_tasks")
    op.drop_table("project_members")
    op.drop_table("projects")
    op.drop_table("project_status")
    op.drop_table("project_labels")
    # ### end Alembic commands ###
